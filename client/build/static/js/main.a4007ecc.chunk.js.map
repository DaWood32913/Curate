{"version":3,"sources":["components/Authentication/Signin.js","components/Authentication/CreateAcc.js","components/NavBar/index.js","components/Jumbotron/index.js","components/SearchForm/index.js","components/SavedArtists/Saved.js","App.js","serviceWorker.js","index.js"],"names":["SignIn","props","react_default","a","createElement","BrowserRouter","action","method","username","type","placeholder","name","value","onChange","handleInputChange","password","onClick","handleLogInSubmit","Link","to","CreateAcc","state","redirectTo","event","_event$target","target","_this","setState","Object","defineProperty","handleFormSubmit","preventDefault","length","alert","concat","axios","post","then","response","console","log","this","Redirect","pathname","Component","NavBar","className","Jumbotron","SearchForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleArtistSubmit","Axios","get","params","res","serverResponse","data","bind","assertThisInitialized","components_Jumbotron","src","thumbnail","alt","art_title","art_date","nationality","JSON","stringify","Saved","App","components_NavBar","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","history","stuff","require","createBrowserHistory","ReactDOM","render","Router","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a4007ecc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { BrowserRouter, Link } from \"react-router-dom\";\r\n// import CreateAcc from \"./CreateAcc\";\r\n\r\nfunction SignIn(props) {\r\n\r\n  return (\r\n    \r\n    <div>\r\n    <BrowserRouter>\r\n    <form action=\"/login\" method=\"GET\">\r\n        <span>Username: {props.username}</span>\r\n        <input\r\n        type=\"text\"\r\n        placeholder=\"Username\"\r\n        name=\"username\"\r\n        value={props.username}\r\n        onChange={props.handleInputChange}\r\n        />\r\n        <span>Password: {props.password}</span>\r\n        <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        name=\"password\"\r\n        value={props.password}\r\n        onChange={props.handleInputChange}\r\n        />\r\n        <button\r\n        onClick={props.handleLogInSubmit}>\r\n            Sign In\r\n        </button>\r\n        \r\n        <div>\r\n            <Link to=\"/createaccount\">\r\n              Create Account\r\n            </Link>\r\n        </div>\r\n    </form>\r\n    </BrowserRouter>\r\n    </div>\r\n);\r\n\r\n}\r\n\r\nexport default SignIn;","import React,{ Component } from \"react\";\r\nimport { BrowserRouter, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nclass CreateAcc extends Component {\r\n  state = {\r\n    username: \"\",\r\n    password: \"\",\r\n    redirectTo: null\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    // Set the state for the appropriate input field\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n\r\n  }\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n        if (!this.state.username || !this.state.password) {\r\n            alert(\"Fill out your username and password please!\");\r\n          } else if (this.state.password.length < 6) {\r\n            alert(\r\n              `Choose a more secure password, ${this.state.username}`\r\n            );\r\n          } else {\r\n            alert(`Hello ${this.state.username}`);\r\n          }\r\n        axios.post('/auth/createAccount',\r\n        {\r\n          username: this.state.username,\r\n          password: this.state.password\r\n        }).then(response => {\r\n          console.log(response);\r\n          this.setState({\r\n            redirectTo: '/login'\r\n          })\r\n          \r\n        })\r\n\r\n  }\r\n  render() {\r\n\r\n    if(this.state.redirectTo){\r\n      return <Redirect to={{pathname:this.state.redirectTo}} />\r\n    }\r\n\r\n    return (\r\n      <BrowserRouter>\r\n        <form action=\"/createaccount/\" method=\"POST\">\r\n          <span>Username: {this.state.username}</span>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            name=\"username\"\r\n            value={this.state.username}\r\n            onChange={this.state.handleInputChange}\r\n          />\r\n          <span>Password: {this.state.password}</span>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.state.handleInputChange}\r\n          />\r\n          <button onClick={this.handleFormSubmit}>\r\n              Create Account\r\n          </button>\r\n        </form>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n    \r\n  }\r\n\r\nexport default CreateAcc;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./style.css\";\r\n\r\nfunction NavBar() {\r\n  return ( \r\n\r\n  <div className=\"header\">\r\n    <ul className=\"nav\">\r\n      <li className=\" nav-item logo-container\">\r\n        <h1 className=\"display-4\" to=\"/\">Goog Enheim\r\n          <Link to=\"/\"></Link>\r\n        </h1>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/login\" className=\"nav-link\">Login</Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/\" className=\"nav-link\">Search</Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link to=\"/saved\" className=\"nav-link\">Saved</Link>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n  )\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Jumbotron() {\r\n  return ( \r\n    <div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Jumbotron;","import React, {Component} from \"react\";\r\nimport Jumbotron from \"../Jumbotron\"\r\n// import Artist from \"../../models\"\r\nimport \"./style.css\";\r\nimport Axios from \"axios\";\r\n// import imageCard from \"../imageCard/index\";\r\n\r\n\r\nclass SearchForm extends Component {\r\n\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      name: \"\",\r\n      serverResponse: null\r\n    }\r\n    this.handleArtistSubmit.bind(this);\r\n  }\r\n\r\n  handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    // Set the state for the appropriate input field\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n\r\n  }\r\n  \r\n  handleArtistSubmit = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"inside handleArtistSubmit\")\r\n    Axios.get(\"/api/artists/\", {\r\n      params: {\r\n        name: this.state.name\r\n      }\r\n    })\r\n    .then(res => {\r\n      console.log('handleArtistSubmit: res: ', res);\r\n    this.setState({serverResponse: res.data});\r\n    })\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <Jumbotron />\r\n        <div className=\"container\">\r\n          <form className=\"form-group\" action=\"/\" method=\"GET\">\r\n            <label>Artist Search</label>\r\n            <input \r\n              name=\"name\"\r\n              type=\"text\" \r\n              className=\"form-control\" \r\n              placeholder=\"Search for artist\" \r\n              onChange={this.handleInputChange} />\r\n            <button \r\n              type=\"submit\" \r\n              className=\"btn btn-primary\" \r\n              onClick={this.handleArtistSubmit}>\r\n                Search\r\n            </button>\r\n          </form>\r\n          <div>\r\n            <div className=\"card img-container hover\">\r\n              <img src={this.state.thumbnail} alt=\"artwork\"></img>\r\n              <ul>\r\n                <li className=\"art_title\">{this.state.art_title}Art Title</li>\r\n                <li className=\"art_date\">{this.state.art_date}Date Created</li>\r\n                <li className=\"artist_name\">{this.state.name}Artist Name</li>\r\n                <li className=\"nationality\">{this.state.nationality}Artist Nationality</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <pre>{JSON.stringify(this.state, null, 2)}</pre>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SearchForm;","import React from \"react\";\r\n\r\nfunction Saved() {\r\n    return (\r\n        <div>\r\n        <h4>Populate saved cards here.</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Saved;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport SignIn from \"./components/Authentication/Signin\"\r\nimport CreateAcc from \"./components/Authentication/CreateAcc\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport SearchForm from \"./components/SearchForm\";\r\nimport Saved from \"./components/SavedArtists/Saved\"\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n    <div>\r\n      <NavBar />\r\n      <Switch>\r\n        <Route exact path=\"/login\" component={ SignIn }/>\r\n        <Route exact path=\"/createaccount/\" component={ CreateAcc }/>\r\n        <Route exact path=\"/\" component={ SearchForm } />\r\n        <Route exact path=\"/saved\" component= { Saved } />\r\n        {/* <Route exact path=\"/books/:id\" component={Detail} />\r\n        <Route component={NoMatch} /> */}\r\n      </Switch>\r\n    </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Router } from \"react-router-dom\"\r\nimport App from \"./App\"\r\nimport * as serviceWorker from './serviceWorker';\r\nvar stuff = require(\"history\").createBrowserHistory;\r\n\r\nconst history = stuff()\r\n\r\nReactDOM.render(\r\n<Router history={history}> \r\n<App />\r\n</Router>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}